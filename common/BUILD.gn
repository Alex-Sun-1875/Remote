# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/buildflag_header.gni")
import("//build/config/features.gni")
import("//ipc/features.gni")
import("//mojo/public/tools/bindings/mojom.gni")
import("//tools/ipc_fuzzer/ipc_fuzzer.gni")
if (is_mac) {
  import("//build/config/mac/mac_sdk.gni")
}

# For feature flags internal to content. See content/public/common:features
# for feature flags that clients of contents need to know about.
buildflag_header("buildflags") {
  header = "buildflags.h"
}

source_set("common") {
  # Targets external to content should always link to the public API.
  # In addition, targets outside of the content component (shell and tests)
  # must not link to this because it will duplicate the code in the component
  # build.
  visibility = [ "//content/*",
                 "//remote/child/*",
  ]

  sources = [
    #"child_process_host_impl.cc",
    #"child_process_host_impl.h",
    "content_export.h",
    "in_process_child_thread_params.h",
    "in_process_child_thread_params.cc",
  ]

  configs += [
    "//content:content_implementation",
    "//build/config:precompiled_headers",
    "//build/config/compiler:no_size_t_to_int_warning",
  ]

  public_deps = [
    ":mojo_bindings",
    "//ipc",
    #"//third_party/blink/public/common",
  ]
  deps = [
    ":buildflags",
    "//base",
    #"//ipc",
    #"//net",
    #"//url",
  ]

  defines = []
  include_dirs = []
  libs = []
  ldflags = []

  allow_circular_includes_from = [
    ":mojo_bindings",
  ]
}

mojom("mojo_bindings") {
  # This interface is internal to content.
  visibility = [
    "//remote/*",
  ]

  # indexed_db.mojom uses a native typemap that is not available in Java.
  cpp_only = true

  # imports vs deps check is disabled for this target to work around
  # windows multiple definitions linker error caused by having
  # both a direct and an indirect dependency on the same target
  skip_deps_check = true

  disable_variants = true

  sources = [
    "associated_interfaces.mojom",
    "child.mojom",
    "child_control.mojom",
  ]

  enabled_features = []
  if (is_linux || is_chromeos) {
    enabled_features += [ "supports_thread_priorities" ]
  }

  import_dirs = [ "//mojo/services" ]

  public_deps = [
    "//mojo/public/mojom/base",
    "//remote/public/mojom:mojom_core_impl",
  ]

  overridden_deps = [ "//remote/public/mojom:mojom_core_impl" ]
  component_deps = [ ":interface_common" ]

  component_output_prefix = "remote_common_mojo_bindings"
  export_class_attribute = "CONTENT_EXPORT"
  export_define = "CONTENT_IMPLEMENTATION=1"
  export_header = "content/common/content_export.h"
}

jumbo_source_set("associated_interfaces_common") {
  defines = [ "BLINK_COMMON_IMPLEMENTATION=1" ]

  sources = [
    "//remote/public/common/associated_interfaces/associated_interface_provider.cc",
    "//remote/public/common/associated_interfaces/associated_interface_registry.cc",
  ]

  public_deps = [ "//third_party/blink/public/mojom:mojom_core_headers" ]

  deps = [
    "//base",
    "//mojo/public/cpp/system",
  ]
}

component("interface_common") {
  output_name = "associated_interfaces_common"

  public_deps = [
    ":associated_interfaces_headers",
    "//remote/public/mojom:mojom_core_impl",
  ]

  deps = [ ":associated_interfaces_common" ]
}

source_set("associated_interfaces_headers") {
  sources = [
    "../public/common/associated_interfaces/associated_interface_provider.h",
    "../public/common/associated_interfaces/associated_interface_registry.h",
  ]

  public_deps = [ "//third_party/blink/public/mojom:mojom_core_headers" ]

  deps = [
    "//base",
    "//mojo/public/cpp/system",
  ]
}
